
public class 2024_75{
//eff: O(n)+O(n)+O(n)=O(n)
	public class working {
	

	public static void main(String[] args) {
      //driver //
	        // int arr[]= {1,-3,6,15,0,2};
	        // int arr[]= {5 , -1 , 3 , 1 , 0 , -2 , 2} ;
	        int arr[]={7 , 8 , -11 , 19 , -11 , 1};
		// int arr[]= {1,1,1,1};
	      System.out.println(findFirstMissing(arr));
		  
	}

	public static int findFirstMissing(int[] a) {
		findMin_swapTostart(a);
		if (a[0]>1) return 1;

	  //  first pass from a[1] to a[length-1]   //
	 
		int j=1;
		while (j< a.length ) {
			  diff_left(a,j) ;
				j++; 
			 }
		 
	   //   second pass from a[arr.length-1] to a[1]   //
  		 j=a.length-1;
  		 while (j> 0 ) {
  			 diff_left(a,j) ;
  			 j--; 
  		 }
 		return a[0]+1 ;
}
	
	
	private static void diff_left(int[] a, int j) {
		if (a[j]-a[0]==1 && a[j]>0)   {
			  swap(a, j);
		   }
	 }

	private static void findMin_swapTostart(int[] a) {
		for (int i=1;i<a.length;i++) {
			if (a[0]>a[i] && a[i]>0) {
				swap(a, i);
			}
		}
		
	}

	public static void swap(int a[],int j) {
		int temp=a[0];
		a[0]=a[j];
		a[j]=temp;
	}
	 
	
}
	}
